#
# MySQL 数据库服务器配置文件
#

[client]
#
# * 所有客户端连接相关的配置
#
port		= 3306
socket		= /home/huoty/.local/mysql/run/mysqld.sock
default-character-set = utf8mb4


[mysqld_safe]
socket		= /home/huoty/.local/mysql/run/mysqld.sock
nice		= 0


[mysqld]
#
# * 基本设置
#
user		= huoty
port		= 3306
basedir		= /home/huoty/.local/mysql/   # MySQL 的安装目录
datadir		= /home/huoty/.local/mysql/data/
pid-file	= /home/huoty/.local/mysql/run/mysqld.pid
socket		= /home/huoty/.local/mysql/run/mysqld.sock
lc-messages-dir	= /home/huoty/.local/mysql/share/

# 临时目录用与保存临时文件， 例如：
# 被用来处理基于磁盘的大型排序，和内部排序一样.
# 以及简单的临时表.
# 如果不创建非常大的临时文件，将其放置到 swapfs/tmpfs 文件系统上也许比较好
# 另一种选择是也可以将其放置在独立的磁盘上.
# 可以使用 ";" 来放置多个路径，其会按照 roud-robin 方法被轮询使用
tmpdir = /home/huoty/.local/mysql/tmp/

# 单服务器时跳过外部锁定，提高并发性能
skip-external-locking

# 设置字符集，utf8mb4 编码是 utf8 编码的超集，兼容 utf8
character-set-server = utf8mb4

# 非 super 用户登录成功后的初始化动作，可用于实现用户登录信息审计
init-connect = 'SET NAMES utf8mb4'

# 绑定数据库访问地址，默认只能用 localhost 访问
# 旧版本中使用 skip-networking 代替
# 如果要允许所有 IP 访问，需设置为 0.0.0.0
bind-address		= 127.0.0.1

# 跳过 DNS 解析以方便客户端快速连接服务器
# 配置后不能在授权表中使用主机名而只能用 IP 格式
#skip-name-resolve = 1

# 会话连接控制
max_connections     = 256
max_connect_errors  = 20  # 连续错误登录次数超过此值则会被限制登录

# back_log 是操作系统在监听队列中所能保持的连接数,
# 队列保存了在MySQL连接管理器线程处理之前的连接.
# 如果有非常高的连接率并且出现 "connection refused" 报错,
# 就应该增加此处的值.
# 查阅操作系统文档来获取这个变量的最大值.
# 如果将 back_log 设定到比你操作系统限制更高的值，将会没有效果
back_log = 50

# 锁等待超时时间
lock_wait_timeout = 3600

# 独立的内存表所允许的最大容量
# 此选项为了防止意外创建一个超大的内存表导致永尽所有的内存资源
max_heap_table_size = 64M

# 内部(内存中)临时表的最大大小
# 如果一个表增长到比此值更大, 将会自动转换为基于磁盘的表.
# 此限制是针对单个表的, 而不是总和
tmp_table_size = 64M

# 缺省的存储引擎
#default-storage-engine = InnoDB

#
# * 更加细微的性能调整
#
key_buffer_size     = 16M
max_allowed_packet	= 16M
thread_stack		= 192K
thread_cache_size   = 8    # 缓存以重用的线程数
#myisam-recover         = BACKUP
#table_cache           = 64    # 所有线程所打开表的总数
#thread_concurrency    = 10

#
# * 查询缓存配置
#   MySQL8.0 之后已经取消了查询缓存功能，可以使用 ProxySQL 来实现缓存
#
#query_cache_limit	= 1M
#query_cache_size    = 16M

#
# * 日志记录与同步复制
#
server-id = 1

# 使用系统时间
log_timestamps = SYSTEM

# 普通日志，能够记录所有的 SQL 查询语句
# 开启该项会严重影响性能，在 5.1 之后的版本可以在运行时启用
#general_log_file        = /home/huoty/.local/mysql/log/mysql.log
#general_log             = 1

# 错误日志
log_error = /home/huoty/.local/mysql/log/error.log

# 慢查询日志
#log_slow_queries	= /home/huoty/.local/mysql/log/mysql-slow.log  # 以被弃用
slow_query_log = on
slow-query-log-file = /home/huoty/.local/mysql/log/mysql-slow.log
long_query_time     = 10
log_queries_not_using_indexes = 1
log_throttle_queries_not_using_indexes = 60
min_examined_row_limit = 1000
log_slow_admin_statements = 1
log_slow_slave_statements = 1

# 二进制日志
# 记录对数据发生或潜在发生更改的SQL语句，并以二进制的形式保存在磁盘中
# 其可以用来查看数据库的变更历史（具体的时间点所有的SQL操作）、
# 数据库增量备份和恢复（增量备份和基于时间点的恢复）、
# MySQL的复制（主主数据库的复制、主从数据库的复制）
# 如果 log_bin 没有指定存储路径，则默认在数据根目录生成 binlog 日志
log_bin             = /home/huoty/.local/mysql/log/mysql-bin
#sync_binlog         = 1
#expire_logs_days    = 7    # 单位为天，8.0 版本后被弃用
binlog_expire_logs_seconds = 604800    # 7 天
max_binlog_size     = 300M
binlog_ignore_db	= mysql
#binlog_do_db		= include_database_name

#
# * InnoDB 相关配置
#
# InnoDB 默认在 /var/lib/mysql/ 目录中启用一个 10MB 的数据文件
# 其他相关配置可参阅 InnnoDB 帮助手册
innodb_file_per_table = 1    # 独立表空间

#
# * 安全特性
#
# 改变根目录
# chroot = /var/lib/mysql/

# 配置 SSL 证书
# ssl-ca=/etc/mysql/cacert.pem
# ssl-cert=/etc/mysql/server-cert.pem
# ssl-key=/etc/mysql/server-key.pem


[mysqldump]
quick
quote-names
max_allowed_packet	= 16M


[mysql]
prompt="\u@mysqldb \R:\m:\s [\d]> "
auto-rehash    # 开启 tab 补全
#no-auto-rehash    # 快速开启 mysql，但没有自动补全


[isamchk]
key_buffer_size = 16M


#
# * 包含其他的配置文件，这些文件能够覆盖掉本文件中的配置项
#   需要包含的配置文件必须以 '.cnf' 结尾, 否则会被忽略
#
!includedir /home/huoty/.local/mysql/etc/
